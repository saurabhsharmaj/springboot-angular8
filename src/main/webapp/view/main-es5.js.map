{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/contact-detail/contact-detail.component.html","./src/app/contact-list/contact-list.component.html","./src/app/create-contact/create-contact.component.html","./src/app/imconfig-details/imconfig-details.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/contact-detail/contact-detail.component.css","./src/app/contact-detail/contact-detail.component.ts","./src/app/contact-list/contact-list.component.css","./src/app/contact-list/contact-list.component.ts","./src/app/contact.service.ts","./src/app/contact.ts","./src/app/create-contact/create-contact.component.css","./src/app/create-contact/create-contact.component.ts","./src/app/imconfig-details/imconfig-details.component.css","./src/app/imconfig-details/imconfig-details.component.ts","./src/app/imconfig.service.ts","./src/app/imconfig.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \" <nav class=\\\"navbar navbar-expand-sm bg-primary navbar-dark\\\">\\n  <!-- Links -->\\n  <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\">\\n          <a routerLink=\\\"imconfigs\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">IM</a>\\n      </li>\\n    <li class=\\\"nav-item\\\">\\n        <a routerLink=\\\"contacts\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">Contact List</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n        <a routerLink=\\\"add\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">Add Contact</a>\\n    </li>\\n  </ul>\\n</nav>\\n<div class=\\\"container\\\">\\n  <br>\\n  <h2 style=\\\"text-align: center;\\\">{{title}}</h2>\\n  <hr>  \\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n  <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\\n\\n<footer class=\\\"footer\\\">\\n  <div class=\\\"container\\\">\\n      <span>(https://www.javaguides.net/2019/06/angular-8-crud-example-tutorial.html)</span>\\n  </div>\\n</footer>\\n\"","module.exports = \"<h2>Contact Details</h2> \\n\\n<hr/>\\n<div *ngIf=\\\"contact\\\">\\n  <div>\\n    <label><b>Name: </b></label> {{contact.name}}\\n  </div>\\n  <div>\\n    <label><b>Email: </b></label> {{contact.email}}\\n  </div>\\n  <div>\\n    <label><b>Phone: </b></label> {{contact.phone}}\\n  </div>  \\n</div>\\n\\n<br>\\n<br>\\n<button (click)=\\\"list()\\\" class=\\\"btn btn-primary\\\">Back to Contact List</button><br>\"","module.exports = \"<p>contact-list works!</p>\\n<div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h2>Contact List</h2>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <table class=\\\"table table-striped\\\">\\n        <thead>\\n          <tr>\\n            <th>Name</th>\\n            <th>Email</th>\\n            <th>Phone</th>\\n            <th>Actions</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let contact of contacts | async\\\">\\n            <td>{{contact.name}}</td>\\n            <td>{{contact.email}}</td>\\n            <td>{{contact.phone}}</td>\\n            <td><button (click)=\\\"deleteContact(contact.id)\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n                <button (click)=\\\"contactDetails(contact.id)\\\" class=\\\"btn btn-info\\\" style=\\\"margin-left: 10px\\\">Details</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\"","module.exports = \"<h3>Create Contact</h3>\\n<div [hidden]=\\\"submitted\\\" style=\\\"width: 400px;\\\">\\n  <form (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" required [(ngModel)]=\\\"contact.name\\\" name=\\\"name\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Email</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" required [(ngModel)]=\\\"contact.email\\\" name=\\\"email\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Phone</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone\\\" required [(ngModel)]=\\\"contact.phone\\\" name=\\\"phone\\\">\\n    </div>\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\n  </form>\\n</div>\\n\\n<div [hidden]=\\\"!submitted\\\">\\n  <h4>You submitted successfully!</h4>\\n  <!-- <button class=\\\"btn btn-success\\\" (click)=\\\"newContact()\\\">Add</button> -->\\n</div>\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm\\\">\\n      <label><b>IP Address: </b></label> {{imconfig.ip}}\\n    </div>\\n    <div class=\\\"col-sm\\\">\\n      <label><b>HostName: </b></label> {{imconfig.hostname}}\\n    </div>\\n    <div class=\\\"col-sm\\\">\\n      <label><b>OS: </b></label> {{imconfig.os}} ({{imconfig.arch}})\\n    </div>\\n  </div>\\n</div>\\n<hr />\\n<div *ngIf=\\\"imconfig\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm\\\">\\n        <label><b>Free Physical Memory Size: </b></label> {{imconfig.freePhysicalMemorySize}}\\n      </div>\\n      <div class=\\\"col-sm\\\">\\n        <label><b>Free Swap Space Size: </b></label> {{imconfig.freeSwapSpaceSize}}\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm\\\">\\n        <label><b>System Cpu Load: </b></label> {{imconfig.systemCpuLoad}}\\n      </div>\\n      <div class=\\\"col-sm\\\">\\n        <label><b>Total Physical Memory Size: </b></label> {{imconfig.totalPhysicalMemorySize}}\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm\\\">\\n        <label><b>Total Swap Space Size: </b></label> {{imconfig.totalSwapSpaceSize}}\\n      </div>\\n      <div class=\\\"col-sm\\\">\\n        <label><b>Process Cpu Load: </b></label> {{imconfig.processCpuLoad}}\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm\\\">\\n        <label><b>Available Processors: </b></label> {{imconfig.availableProcessors}}\\n      </div>\\n      <div class=\\\"col-sm\\\">\\n        <label><b>System Load Average: </b></label> {{imconfig.systemLoadAverage}}\\n      </div>\\n    </div>\\n    <label><b>Feature(s): </b> </label>\\n    <div class=\\\"row\\\">\\n      \\n      <div class=\\\"col-sm\\\">\\n        <ul>\\n          <ol  *ngFor=\\\"let f of imconfig.feature\\\"> {{f.name}} - {{f.status}}</ol>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\\n<br>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ContactDetailComponent } from './contact-detail/contact-detail.component';\nimport { CreateContactComponent } from './create-contact/create-contact.component';\nimport { ContactListComponent } from './contact-list/contact-list.component';\n\nimport { ImconfigDetailsComponent } from './imconfig-details/imconfig-details.component';\n\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'imconfigs', pathMatch: 'full' },\n  { path: 'contacts', component: ContactListComponent },\n  { path: 'add', component: CreateContactComponent },\n  { path: 'details/:id', component: ContactDetailComponent },\n\n\n  { path: 'imconfigs', component: ImconfigDetailsComponent }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'IM';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CreateContactComponent } from './create-contact/create-contact.component';\nimport { ContactDetailComponent } from './contact-detail/contact-detail.component';\nimport { ContactListComponent } from './contact-list/contact-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DataTablesModule } from 'angular-datatables';\nimport { ImconfigDetailsComponent } from './imconfig-details/imconfig-details.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateContactComponent,\n    ContactDetailComponent,\n    ContactListComponent,\n    ImconfigDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    DataTablesModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRhY3QtZGV0YWlsL2NvbnRhY3QtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ContactListComponent } from \"../contact-list/contact-list.component\";\nimport { ContactService } from \"../contact.service\";\nimport { Contact } from \"../contact\";\nimport { Router,ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-contact-detail',\n  templateUrl: './contact-detail.component.html',\n  styleUrls: ['./contact-detail.component.css']\n})\nexport class ContactDetailComponent implements OnInit {\n\n  id: number;\n  contact: Contact;\n\n  constructor(private route: ActivatedRoute,private router: Router,\n    private contactService: ContactService) { }\n\n  ngOnInit() {\n    this.contact = new Contact();\n\n    this.id = this.route.snapshot.params['id'];\n    \n    this.contactService.getContact(this.id)\n      .subscribe(data => {\n        console.log(data)\n        this.contact = data;\n      }, error => console.log(error));\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRhY3QtbGlzdC9jb250YWN0LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ContactDetailComponent } from \"../contact-detail/contact-detail.component\";\nimport { Observable } from \"rxjs\";\nimport { ContactService } from \"../contact.service\";\nimport { Contact } from \"../contact\";\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-contact-list',\n  templateUrl: './contact-list.component.html',\n  styleUrls: ['./contact-list.component.css']\n})\nexport class ContactListComponent implements OnInit {\n  contacts: Observable<Contact[]>;\n  constructor(private contactService: ContactService,private router: Router) { \n\n  }\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.contacts = this.contactService.getContactsList();\n  }\n\n  deleteContact(id: number) {\n    this.contactService.deleteContact(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\n  contactDetails(id: number){\n    this.router.navigate(['details', id]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  private baseUrl = 'http://localhost:4000/contacts';\n\n  constructor(private http: HttpClient) { }\n\n  getContact(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createContact(contact: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, contact);\n  }\n\n  updateContact(id: number, value: any): Observable<Object> {\n   return this.http.put(`${this.baseUrl}/${id}`, value);\n  }\n\n  deleteContact(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getContactsList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n}\n","export class Contact {\r\n    id: number;\r\n    name: string;\r\n    email: string;\r\n    phone: string;\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS1jb250YWN0L2NyZWF0ZS1jb250YWN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ContactService } from \"../contact.service\";\nimport { Contact } from \"../contact\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-contact',\n  templateUrl: './create-contact.component.html',\n  styleUrls: ['./create-contact.component.css']\n})\nexport class CreateContactComponent implements OnInit {\n\n  contact: Contact = new Contact();\n  submitted = false;\n\n  constructor(private contactService: ContactService,private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  newContact(): void {\n    this.submitted = false;\n    this.contact = new Contact();\n  }\n\n  save() {\n    console.log(this.contact)\n    this.contactService.createContact(this.contact)\n      .subscribe(data => console.log(data), error => console.log(error));\n    this.contact = new Contact();\n    this.gotoList();\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.save();    \n  }\n\n  gotoList() {\n    this.router.navigate(['/contacts']);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ltY29uZmlnLWRldGFpbHMvaW1jb25maWctZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { IMConfigService } from \"../imconfig.service\";\nimport { ImConfig } from \"../imconfig\";\nimport { Router,ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-imconfig-details',\n  templateUrl: './imconfig-details.component.html',\n  styleUrls: ['./imconfig-details.component.css']\n})\nexport class ImconfigDetailsComponent implements OnInit {\n\n  id: number;\n  imconfig: ImConfig;\n\n  constructor(private route: ActivatedRoute,private router: Router,\n    private imconfigService: IMConfigService) { }\n\n  ngOnInit() {\n    this.imconfig = new ImConfig();    \n    this.imconfigService.getIMConfig()\n      .subscribe(data => {\n        console.log(data)\n        this.imconfig = data;\n      }, error => console.log(error));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IMConfigService {\n  private baseUrl = 'http://localhost:4000/common/basic';\n  constructor(private http: HttpClient) { }\n\n  getIMConfig(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n}\n","import { Feature } from './feature';\r\n\r\nexport class ImConfig {\r\n    id: number;\r\n    ipaddress: string;\r\n    hostname: string;\r\n    os: string;\r\n    arch: string;\r\n    freePhysicalMemorySize: String;\r\n    freeSwapSpaceSize: String;\r\n    processCpuTime: String;\r\n    systemCpuLoad: String;\r\n\r\n    totalPhysicalMemorySize: String;\r\n    totalSwapSpaceSize: String;\r\n    processCpuLoad: String;\r\n    availableProcessors: String;\r\n    systemLoadAverage: String;\r\n\r\n    feature: Feature[];\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}